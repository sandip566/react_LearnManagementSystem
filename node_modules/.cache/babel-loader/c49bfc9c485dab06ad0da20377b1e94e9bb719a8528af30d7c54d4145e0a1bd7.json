{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './VerifyOtp.css';\nimport Header from \"../../component/header/Header\";\nimport Footer from \"../../component/footer/Footer\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VerifyOtp() {\n  _s();\n  const [otp, setOtp] = useState(\"\");\n  const handleChange = e => {\n    const value = e.target.value;\n    if (!isNaN(value) && value.length <= 6) {\n      setOtp(value);\n    }\n  };\n  const handleSubmit = async () => {\n    if (otp.length === 6) {\n      try {\n        // API Call (highlighted)\n        const response = await fetch('https://4r4iwhot12.execute-api.ap-south-1.amazonaws.com/auth/auth/validateOtp', {\n          method: 'POST',\n          // Assuming POST for OTP validation (adjust if needed)\n          headers: {\n            'Content-Type': 'application/json' // Adjust content type if necessary\n          },\n          body: JSON.stringify({\n            otp\n          }) // Assuming OTP is sent in the body\n        });\n        if (!response.ok) {\n          throw new Error(`API request failed with status ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(\"OTP verified:\", data); // Handle successful validation here\n      } catch (error) {\n        console.error(error.message); // Log the error message\n      }\n    } else {\n      console.log(\"Invalid OTP\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(VerifyOtp, \"uHalQn4Uh6ZILbAlMI7a//G42Og=\");\n_c = VerifyOtp;\nexport default VerifyOtp;\nvar _c;\n$RefreshReg$(_c, \"VerifyOtp\");","map":{"version":3,"names":["React","useState","Header","Footer","Fragment","_Fragment","jsxDEV","_jsxDEV","VerifyOtp","_s","otp","setOtp","handleChange","e","value","target","isNaN","length","handleSubmit","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","console","log","error","message","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/lmsproject/lms-react/src/pages/verify-otp/VerifyOtp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './VerifyOtp.css';\r\nimport Header from \"../../component/header/Header\";\r\nimport Footer from \"../../component/footer/Footer\";\r\n\r\nfunction VerifyOtp() {\r\n  const [otp, setOtp] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n\r\n    if (!isNaN(value) && value.length <= 6) {\r\n      setOtp(value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (otp.length === 6) {\r\n      try {\r\n        // API Call (highlighted)\r\n        const response = await fetch('https://4r4iwhot12.execute-api.ap-south-1.amazonaws.com/auth/auth/validateOtp', {\r\n          method: 'POST', // Assuming POST for OTP validation (adjust if needed)\r\n          headers: {\r\n            'Content-Type': 'application/json', // Adjust content type if necessary\r\n          },\r\n          body: JSON.stringify({ otp }), // Assuming OTP is sent in the body\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`API request failed with status ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log(\"OTP verified:\", data); // Handle successful validation here\r\n      } catch (error) {\r\n        console.error(error.message); // Log the error message\r\n      }\r\n    } else {\r\n      console.log(\"Invalid OTP\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* ... rest of your component code ... */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default VerifyOtp;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AACxB,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAOC,MAAM,MAAM,+BAA+B;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAE5B,IAAI,CAACE,KAAK,CAACF,KAAK,CAAC,IAAIA,KAAK,CAACG,MAAM,IAAI,CAAC,EAAE;MACtCN,MAAM,CAACG,KAAK,CAAC;IACf;EACF,CAAC;EAED,MAAMI,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIR,GAAG,CAACO,MAAM,KAAK,CAAC,EAAE;MACpB,IAAI;QACF;QACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,+EAA+E,EAAE;UAC5GC,MAAM,EAAE,MAAM;UAAE;UAChBC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB,CAAE;UACtC,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEf;UAAI,CAAC,CAAC,CAAE;QACjC,CAAC,CAAC;QAEF,IAAI,CAACS,QAAQ,CAACO,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAE,kCAAiCR,QAAQ,CAACS,MAAO,EAAC,CAAC;QACtE;QAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAC,CAAC,CAAC;MACtC,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC;MAChC;IACF,CAAC,MAAM;MACLH,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC5B;EACF,CAAC;EAED,oBACEzB,OAAA,CAAAF,SAAA,mBAEE,CAAC;AAEP;AAACI,EAAA,CA1CQD,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AA4ClB,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}