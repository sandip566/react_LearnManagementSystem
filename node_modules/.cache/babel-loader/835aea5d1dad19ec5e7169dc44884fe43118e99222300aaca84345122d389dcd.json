{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\lmsproject\\\\lms-react\\\\src\\\\pages\\\\verify-otp\\\\VerifyOtp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './VerifyOtp.css';\nimport Header from \"../../component/header/Header\";\nimport Footer from \"../../component/footer/Footer\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction VerifyOtp() {\n  _s();\n  const [otp, setOtp] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  // Fetch the API URL securely from environment variables (assuming a file named '.env')\n  const apiUrl = process.env.REACT_APP_VERIFY_OTP_API_URL;\n  useEffect(() => {\n    // Cleanup function (optional)\n    return () => {};\n  }, []); // Empty dependency array to prevent unnecessary re-runs\n\n  const handleChange = e => {\n    const value = e.target.value;\n    if (!isNaN(value) && value.length <= 6) {\n      setOtp(value);\n      setErrorMessage(null); // Clear error message on input change\n    }\n  };\n  const handleSubmit = async () => {\n    if (otp.length === 6) {\n      try {\n        const response = await fetch(apiUrl, {\n          method: 'POST',\n          // Assuming POST for OTP validation (adjust if needed)\n          headers: {\n            'Content-Type': 'application/json' // Adjust content type if necessary\n          },\n          body: JSON.stringify({\n            otp\n          }) // Assuming OTP is sent in the body\n        });\n        if (!response.ok) {\n          throw new Error(`API request failed with status ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(\"OTP verified:\", data); // Handle successful validation here\n      } catch (error) {\n        setErrorMessage(error.message);\n      }\n    } else {\n      console.log(\"Invalid OTP\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(VerifyOtp, \"FlXiClTxGV5jPeQJneE/hucIPnc=\");\n_c = VerifyOtp;\nexport default VerifyOtp;\nvar _c;\n$RefreshReg$(_c, \"VerifyOtp\");","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","VerifyOtp","_s","otp","setOtp","errorMessage","setErrorMessage","apiUrl","process","env","REACT_APP_VERIFY_OTP_API_URL","handleChange","e","value","target","isNaN","length","handleSubmit","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","console","log","error","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/lmsproject/lms-react/src/pages/verify-otp/VerifyOtp.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './VerifyOtp.css';\r\nimport Header from \"../../component/header/Header\";\r\nimport Footer from \"../../component/footer/Footer\";\r\n\r\nfunction VerifyOtp() {\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  // Fetch the API URL securely from environment variables (assuming a file named '.env')\r\n  const apiUrl = process.env.REACT_APP_VERIFY_OTP_API_URL;\r\n\r\n  useEffect(() => {\r\n    // Cleanup function (optional)\r\n    return () => {};\r\n  }, []); // Empty dependency array to prevent unnecessary re-runs\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n\r\n    if (!isNaN(value) && value.length <= 6) {\r\n      setOtp(value);\r\n      setErrorMessage(null); // Clear error message on input change\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (otp.length === 6) {\r\n      try {\r\n        const response = await fetch(apiUrl, {\r\n          method: 'POST', // Assuming POST for OTP validation (adjust if needed)\r\n          headers: {\r\n            'Content-Type': 'application/json', // Adjust content type if necessary\r\n          },\r\n          body: JSON.stringify({ otp }), // Assuming OTP is sent in the body\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`API request failed with status ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log(\"OTP verified:\", data); // Handle successful validation here\r\n      } catch (error) {\r\n        setErrorMessage(error.message);\r\n      }\r\n    } else {\r\n      console.log(\"Invalid OTP\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid\">\r\n        {/* ... rest of your component code ... */}\r\n      </div>\r\n      <div>\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default VerifyOtp;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AACxB,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAOC,MAAM,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAMc,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,4BAA4B;EAEvDhB,SAAS,CAAC,MAAM;IACd;IACA,OAAO,MAAM,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMiB,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAE5B,IAAI,CAACE,KAAK,CAACF,KAAK,CAAC,IAAIA,KAAK,CAACG,MAAM,IAAI,CAAC,EAAE;MACtCZ,MAAM,CAACS,KAAK,CAAC;MACbP,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;IACzB;EACF,CAAC;EAED,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAId,GAAG,CAACa,MAAM,KAAK,CAAC,EAAE;MACpB,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACZ,MAAM,EAAE;UACnCa,MAAM,EAAE,MAAM;UAAE;UAChBC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB,CAAE;UACtC,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAErB;UAAI,CAAC,CAAC,CAAE;QACjC,CAAC,CAAC;QAEF,IAAI,CAACe,QAAQ,CAACO,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAE,kCAAiCR,QAAQ,CAACS,MAAO,EAAC,CAAC;QACtE;QAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAC,CAAC,CAAC;MACtC,CAAC,CAAC,OAAOI,KAAK,EAAE;QACd1B,eAAe,CAAC0B,KAAK,CAACC,OAAO,CAAC;MAChC;IACF,CAAC,MAAM;MACLH,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC5B;EACF,CAAC;EAED,oBACEjC,OAAA,CAAAE,SAAA;IAAAkC,QAAA,gBACEpC,OAAA;MAAKqC,SAAS,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE3B,CAAC,eACNzC,OAAA;MAAAoC,QAAA,eACEpC,OAAA,CAACF,MAAM;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA,eACN,CAAC;AAEP;AAACrC,EAAA,CAxDQD,SAAS;AAAAuC,EAAA,GAATvC,SAAS;AA0DlB,eAAeA,SAAS;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}